// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecognitionLogService.Core.Framework;

namespace RecognitionLogService.Core.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20200213180034_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataStorage.Entities.Server", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IpV4MetaDataId")
                        .HasColumnName("IpV4MetaDataId")
                        .HasColumnType("bigint");

                    b.Property<long>("IpV6MetaDataId")
                        .HasColumnName("IpV6MetaDataId")
                        .HasColumnType("bigint");

                    b.Property<long>("MetadataId")
                        .HasColumnName("MetadataId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IpV4MetaDataId");

                    b.HasIndex("IpV6MetaDataId");

                    b.HasIndex("MetadataId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("DataStorage.Entities.ServerMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnName("HostNameTest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServerMetadata");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ServerMetadata");
                });

            modelBuilder.Entity("DataStorage.Entities.ServerIpV4", b =>
                {
                    b.HasBaseType("DataStorage.Entities.ServerMetadata");

                    b.Property<string>("IpV4")
                        .IsRequired()
                        .HasColumnName("IpAddressV4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortV4")
                        .HasColumnName("PortV4")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ServerIpV4");
                });

            modelBuilder.Entity("DataStorage.Entities.ServerIpV6", b =>
                {
                    b.HasBaseType("DataStorage.Entities.ServerMetadata");

                    b.Property<string>("IpV6")
                        .IsRequired()
                        .HasColumnName("IpV6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortV6")
                        .HasColumnName("PortV6")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ServerIpV6");
                });

            modelBuilder.Entity("DataStorage.Entities.Server", b =>
                {
                    b.HasOne("DataStorage.Entities.ServerIpV4", "IpV4MetaData")
                        .WithMany()
                        .HasForeignKey("IpV4MetaDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataStorage.Entities.ServerIpV6", "IpV6MetaData")
                        .WithMany()
                        .HasForeignKey("IpV6MetaDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataStorage.Entities.ServerMetadata", "Metadata")
                        .WithMany()
                        .HasForeignKey("MetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
